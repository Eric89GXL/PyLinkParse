language: python

# Here we use anaconda for builds other than 2.7, since it provides the
# simplest interface for running different versions of Python

virtualenv:
    # set up our 2.7 to use the system site packages correctly
    system_site_packages: true

env:
    - PYTHON=2.6 DEPS=full
    - PYTHON=2.7 DEPS=full  # note: this runs python-pandas (old version)
    - PYTHON=3.3 DEPS=full
    - PYTHON=3.3 DEPS=minimal  # edf2asc and pandas optional
    - PYTHON=2.7 DEPS=minimal

before_install:
    - travis_retry sudo apt-get -qq update;
    - if [ "${PYTHON}" != "2.7" ]; then
        wget http://repo.continuum.io/miniconda/Miniconda-2.2.2-Linux-x86_64.sh -O miniconda.sh;
        chmod +x miniconda.sh;
        ./miniconda.sh -b;
        export PATH=/home/$USER/anaconda/bin:$PATH;
        conda update --yes conda;
      fi;

install:
    - if [ "${PYTHON}" == "2.7" ]; then
        travis_retry sudo apt-get -qq install python-scipy python-nose python-matplotlib;
      else
        conda create -n testenv --yes --quiet pip python=$PYTHON;
        source activate testenv;
        conda install --yes --quiet scipy nose matplotlib;
      fi;
    # edf2asc and pandas
    - if [ "${DEPS}" == "full" ]; then
        echo "deb http://archive.canonical.com/ lucid partner" | sudo tee -a /etc/apt/sources.list;
        echo "deb http://download.sr-support.com/x64 /" | sudo tee -a /etc/apt/sources.list;
        travis_retry sudo apt-get update -qq;
        travis_retry sudo apt-get install -qq -y --force-yes edf2asc-3.1;
        if [ "${PYTHON}" == "2.7" ]; then
          sudo apt-get install python-pandas;
        else
          conda install --yes --quiet pandas;
        fi;
      fi;
    - pip install -q coveralls nose-timer flake8
    - python setup.py build
    - python setup.py install
    - SRC_DIR=$(pwd)
    - cd ~
    # We will run tests from vispy dir to test our install worked
    - PLP_DIR=$(python -c 'import pyeparse;print(pyeparse.__path__[0])')
    # Link coverage to src dir, coveralls should be run from there (needs git calls)
    - ln -s ${PLP_DIR}/../.coverage ${SRC_DIR}/.coverage
    - ln -s ${SRC_DIR}/pyeparse/tests/data ${PLP_DIR}/tests/data
    - ln -s ${SRC_DIR}/.coveragerc ${PLP_DIR}/../.coveragerc
    - ln -s ${SRC_DIR}/setup.cfg ${PLP_DIR}/../setup.cfg

script:
    - cd ${PLP_DIR}/../
    - # Nose-timer has bugs on 3+ as of Jan 2014
    - if [ "${PYTHON}" == "2.7" ]; then
        nosetests --with-timer --timer-top-n 10;
      else
        nosetests;
      fi
    # Require strict adherence to PEP8 and pyflakes (can use "# noqa" to skip)
    - cd ${SRC_DIR}
    - make flake;

after_success:
    # Need to run from source dir to execute appropriate "git" commands
    - coveralls;
